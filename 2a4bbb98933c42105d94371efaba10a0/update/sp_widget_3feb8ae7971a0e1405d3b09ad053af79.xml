<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope, $http, $location) {
	/* widget controller */
	var c = this;

	//====================================
	c.records = [];
	// Calculate the date 6 months ago
	var currentDate = new Date();	
	var sixMonthsAgo = new Date(currentDate.setMonth(currentDate.getMonth() - 6));
	// Format the date to YYYY-MM-DD HH:MM:SS
	var formattedDate = sixMonthsAgo.toISOString().slice(0, 19).replace('T', ' ');

	// REST: Function to fetch records based on the selected month
	c.fetchRecords = function(employeeName) {
		document.getElementById('nameSelect').style.background = 'white';
		$http({
			method: 'GET',
			url: '/api/now/table/x_1093559_hsc_em_0_request_time_off?',
			params: {
				sysparm_query: 'employee_name=' + employeeName + '^sys_created_on>=' + formattedDate,
				sysparm_fields: 'number,month,day,year,type,approval,sys_created_on,closed_date',
				sysparm_limit: 31,
				sysparm_orderby: 'day' ,
			}
		}).then(function(response) {
			c.records = response.data.result;

			/* ==REST is returning wrong timezone. So we splice the TIME out. ========= */			
			for(var i=0;i<c.records.length;i++){
				var createdDate = c.records[i].sys_created_on;
				var closedDate = c.records[i].closed_date;
				var createDate = convertDate(createdDate);
				var closeDate = convertDate(closedDate);

				c.records[i].sys_created_on = createDate;
				c.records[i].closed_date = closeDate;
			}//End Loop

			function convertDate(createdDate) {		
				var cdArray = createdDate.split('');
				var spliceArray = cdArray.splice(0,10);
				var joinArray = spliceArray.join('');
				return joinArray;
			}//End function
			/* ========== END SPLICE OF DATE/TIME ===================== */	
			// Sort the array by 'day' property using the compare function
			c.records.sort(compareByDay);	

			//Initialize 2 arrays
			c.requested = [];
			c.prevRequested = [];				

			for(var r = 0; r < c.records.length;r++){
				if(c.records[r].approval == "requested"){					
					c.requested.push(c.records[r]);
				}else{
					c.prevRequested.push(c.records[r]);						
				}				
			}			
		});
	};//END FETCH 
	//=======================================================================
	//When a checkbox is clicked, pass captures the record info 
	c.selections = [];
	c.selected = false;

	c.daySelected = function(month, day, year, type, checkbox) { 	
		var typeName = month+day+year;

		if(checkbox){ 			
			var obj ={month: month, day: day, year: year, type: type, typeName: typeName};			
			c.selections.push(obj);				
		}else if(!checkbox){ 			
			for(var i = 0; i < c.selections.length; i++){
				var index = c.selections.findIndex(function(obj) {
					return obj.day === day;
				});
				if (index !== -1) { 
					c.selections.splice(index, 1);					
				}
			}//End Loop
		}//End If
		//Sort array
		c.selections.sort(compareByDay);	
	};//End c.daySelected Function

	//Sorts the objects in the Array
	function compareByDay(a, b) {
		return a.day - b.day;
	}
	//================== CANCEL REQUEST BUTTON ================
	c.selectedName = '';
	var RequestObject = {};
	c.submitButton = function(){
		// =============== VALIDATE FIELDS ================= `
		if(c.selectedName == ""){ 
			document.getElementById('nameSelect').style.background = 'pink';
			c.validateModal('Please select your name.');
			return;
		}	

		if(c.requested.length == 0){
			c.validateModal('You do not have any Requests in progress.'); 
			return;
		}		

		if(c.selections.length == 0){
			c.validateModal('Please make a selection.'); 
			return;
		}

		c.showModal();

	} //-------------------END CANCEL REQUEST FUNCTION------------------------------
	// ====================== MODAL ===========================
	c.submitModal = function() {
		c.cancelInProgress = true;

		RequestObject.employeeName = c.selectedName;
		RequestObject.requestedDays = c.selections;

		$scope.data.yourSelections = RequestObject;
		var serverUpdated = $scope.server.update();

		serverUpdated.then(function(){

			c.cancelInProgress = false;
			c.isCancelModalDiv=true;
			c.cancelModalLabel= c.data.cancelMsg;
			c.cancelledTickets = c.data.cancelledTickets;
			c.getParameters();
		});

		c.isModalVisible = false;
		//c.onMonthChange();
		c.records = [];
		c.selections = [];
		c.requested = [];
		c.prevRequested = [];		
		c.selectedName =''; 

	};//End Function

	c.isModalVisible = false;

	c.showModal = function() { 
		c.isModalVisible = true;		
	};

	c.closeModal = function() {
		c.isModalVisible = false;
	};

	//c.isCancelModalDiv
	c.isCancelModalDiv = false;
	c.validateModal = function(msg){
		c.isCancelModalDiv = true;
		c.cancelModalLabel=msg;
	}

	c.closeValidateModal = function(){
		c.isCancelModalDiv = false;
	}

	//c.cancelInProgress
	c.cancelInProgress = false;	

	//======================== END MODAL========================

	//====================================
	//Get URL parameters using the AngularJS service - $location
	c.getParameters=function(){
		c.locationObj = $location.search();
		var empSysId = c.locationObj.empSysId;
		//var redirectUser = c.locationObj.redirectUser;
		if(empSysId){	
			c.fetchRecords(empSysId);
			c.selectedName = empSysId;
		} 
	}//End Function
	c.getParameters();
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>#mainDiv{
  position:absolute;
  top:-10px;
  width:100%;
  color:black;  
  margin:0;
  padding:0;  
  border-radius:3px;
  box-shadow: 1px 2px 4px gray;
}
/* ========== HEADER ============== */
.headerDiv{
width:100%;
  text-align:center;
}
h3, h4{
  text-align:center;
  font-weight:bold;
}

select{
  border:none;
  border-radius:3px;
  max-width:170px;
  box-shadow: 1px 1px 3px gray;
}
/* ============ END HEADER ============ */
/* ====== MY REQUESTS ======== */
.myRequestsDiv
{
  width:100%;   
  max-height:50vh;
  overflow:auto;  
  text-align:center;  
}

#myRequestsHeader {
  width:100%; 
  text-align:center;
}
#myRequestsHeader th{
  width:100px;    
  padding:3px;
  border-bottom:solid;
  border-width:thin;
  text-align:center;
}


#myRequestsHeader td{
  width:100px;   
  padding:3px;
  text-align:center;
}

#myRequestsHeader input{
  border-radius:2px;
  box-shadow: 1px 1px 2px;
}


#myRequestsHeader img{
  width:20px;
  height:20px;
  box-shadow: 1px 2px 6px gray;
}


/* ====== END MY REQUESTS ======== */
/* ====== CLOSED REQUESTS ======== */
.closedRequestDiv
{
  width:100%;   
  max-height:50vh;
  overflow:auto;  
  text-align:center;
  background:#fae8f0;  
}

#closedRequestHeader {
  width:100%; 
  margin-top:10px;
  margin-bottom:10px;
}

#closedRequestHeader th{
  width:100px;    
  padding:3px;
  border-bottom:solid;
  border-width:thin;
  text-align:center;
}

#closedRequestRecords {
  width:100%;  
}

#closedRequestRecords td{
  width:100px;   
  padding:3px;
  text-align:center;
}

/* ====== END CLOSED REQUESTS ======== */

.selectionColor{
  color:blue;
  font-weight:bold;
}

.submitButtonDiv
{
  width:97%;
  text-align:center;

}
.submitButton {
  text-shadow: 1px 1px 2px gray;
  text-align:center;
  color: green;   
  font-weight: bold;
  border:none;
  border-radius:3px;
  margin:5px;
  box-shadow: 1px 1px 2px gray;
}

.submitButton:hover,
.submitButton:focus {   
  text-decoration: none;
  cursor: pointer;
  box-shadow: 2px 2px 5px gray;
}



/* ====== MODAL ======== */
.modal {
  display: block;
  position: fixed;
  z-index: 2;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.4);
  /* display: none; -*/
}

.modal-content {
  color: black;
  background-color: #fefefe;
  margin: 15% auto;
  padding: 20px;
  padding-bottom: 40px;
  border: 1px solid #888;
  width: 80%;
  max-width: 600px;
}

.spanBtns {
  color: #aaa;
  float: right;    
}

.btns {
  color: #aaa;
  font-size: 20px;
  font-weight: bold;
  border:none;
}

.btns:hover,
.btns:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}
.submitBtn {
  text-shadow: 1px 1px 2px gray;
  text-align:center;
  color: green;   
  font-weight: bold;
  border:none;
  border-radius:3px;
  margin:5px;
  box-shadow: 1px 1px 2px gray;
}

.submitBtn:hover{   
  box-shadow: 2px 2px 5px gray;
}

.cancelBtn {
  text-align:center;
  color: blue;   
  font-weight: bold;
  border:none;
  border-radius:3px;
  margin:5px;
  box-shadow: 1px 1px 2px gray;
}

.cancelBtn:hover{   
 box-shadow: 2px 2px 5px gray;
}

/* ============ MODAL ============= */

.cancelModalDiv{
  display: block;
  position: fixed;
  z-index: 2;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.4);
  /* display: none; -*/
}

.cancelModal-content {
  background:white;
  margin: 15% auto;
  padding: 20px;
  padding-bottom: 40px;
  border: 1px solid #888;
  border-radius:5px;
  box-shadow: 1px 2px 5px black;
  width: 80%;
  max-width: 600px;
  text-align:center;
}

.cancelModalLabel {
  color:black;
  font-weight: bold;
  font-size:18px;
  text-align:center;
}

.validateBtn {
  font-size:20px;
  text-align:center;
  color: green;   
  font-weight: bold;
  border:none;
  border-radius:3px;
  margin:5px;
  box-shadow: 1px 1px 2px gray;
}

.validateBtn:hover{   
  box-shadow: 2px 2px 5px gray;
}



.cancelInProgress{
  display:block;
  z-index:1;
  position:fixed;
  top:0px;
  left:0px;
  width:100%;
  height:100%;
  background-color:rgba(0,0,0,0.4);

}

/* ================================ */


















</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>hsc_my_requests</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>HSC My Requests</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	//==============Load Employee Names =================
	var empArray=[];
	data.empNames = empArray;

	var employeesGr = new GlideRecord('sys_user');
	employeesGr.addActiveQuery();
	employeesGr.query();

	while(employeesGr.next()){	
		var empSysId = employeesGr.getValue('sys_id');
		var empName = employeesGr.getValue('name');
		var empObj = {name: empName, sysId: empSysId};		

		empArray.push(empObj);
	}

	// Sort the users array by the name property
	empArray.sort(function(a, b) {
		if (a.name < b.name) {
			return -1;
		}
		if (a.name > b.name) {
			return 1;
		}
		return 0;
	});
	//================== END LOADING EMPLOYEE ARRAY ==========================
	// Bind the Client OBJECT with the Server INPUT OBJECT to get the Request Object data
	var requestObject = input;

	if(requestObject){
		// Initialize a GlideRecord object for the target table
		var employeeName = requestObject.yourSelections.employeeName;
		var requestedDays = requestObject.yourSelections.requestedDays;

		//Update Records-Set approval to Employee Canceled---------------
		var numArray = [];
		for(var i = 0;i< requestedDays.length;i++){
			var month = requestedDays[i].month;
			var day = requestedDays[i].day;
			var year = requestedDays[i].year;			
			
			var gr = new GlideRecord('x_1093559_hsc_em_0_request_time_off');
			gr.addQuery('month',month);
			gr.addQuery('day',day);
			gr.addQuery('year',year);
			gr.query();
		
			if(gr.next()){	
				if(i == 0){gr.parent_record = true;}else{gr.parent_record = false;}
				// Set field values
				gr.approval = "employee_canceled";
				gr.closed_date = new GlideDateTime();
				gr.update();
			}

			numArray.push(gr.number);
		}//END FOR LOOP
		var num = numArray.join(',');
		data.cancelMsg ='SUCCESS. THE FOLLOWING REQUESTS HAVE BEEN CANCELED.'
		data.cancelledTickets = num;
	}
	//------------------------------------

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-05-27 07:59:04</sys_created_on>
        <sys_id>3feb8ae7971a0e1405d3b09ad053af79</sys_id>
        <sys_mod_count>567</sys_mod_count>
        <sys_name>HSC My Requests</sys_name>
        <sys_package display_value="HSC Employee Center" source="x_1093559_hsc_em_0">2a4bbb98933c42105d94371efaba10a0</sys_package>
        <sys_policy/>
        <sys_scope display_value="HSC Employee Center">2a4bbb98933c42105d94371efaba10a0</sys_scope>
        <sys_update_name>sp_widget_3feb8ae7971a0e1405d3b09ad053af79</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-07-24 00:29:05</sys_updated_on>
        <template><![CDATA[<div id="mainDiv" > 
  <h3>MY REQUESTS</h3> 
  <div class="headerDiv" >  
  <br/>    
      <label for="nameSelect">*Name</label>      
      <select id="nameSelect"  ng-model="c.selectedName" ng-change="c.fetchRecords(c.selectedName)" >
        <option ng-repeat="employee in data.empNames" value="{{employee.sysId}}">{{employee.name}}</option>
      </select>     
      <button class="submitButton" ng-click="c.submitButton()">CANCEL REQUEST</button>
    </div>    
    <div class="myRequestsDiv" >       
      <table id="myRequestsHeader" >                 
        <thead>
          <tr>    
            <th> <img src="hsc_checkmark.jpg" /></th>
            <th>Month </th>
            <th>Day </th>
            <th>Year </th> 
            <th>Type </th>
            <th>Status</th>
            <th>Created </th>             
          </tr>
        </thead>      
     
        <tbody>
          <tr ng-repeat="record in c.requested">
            <td><input ng-model="record.selected"  type="checkbox" ng-click="c.daySelected(record.month,record.day,record.year,record.type,record.selected )" /> </td>
            <td>{{record.month}}</td>
            <td>{{record.day}}</td>
            <td>{{record.year}}</td>
            <td>{{record.type}}</td>
            <td>{{record.approval}}</td>
            <td>{{record.sys_created_on}}</td>            
          </tr>
        </tbody>
      </table>
    </div>
    
     <div class="closedRequestDiv" >
       <h4>Closed Requests</h4>       
      <table id="closedRequestHeader" >                 
        <thead>
          <tr>    
            <th>Month </th>
            <th>Day </th>
            <th>Year </th> 
            <th>Type </th>
            <th>Status</th>
            <th>Created </th>
            <th>Closed</th>
          </tr>
        </thead>          
        <tbody>
          <tr ng-repeat="record in c.prevRequested">
            <td>{{record.month}}</td>
            <td>{{record.day}}</td>
            <td>{{record.year}}</td>
            <td>{{record.type}}</td>
            <td>{{record.approval}}</td>
            <td>{{record.sys_created_on}}</td>
            <td>{{record.closed_date}}</td>
          </tr>
        </tbody>
      </table>
    </div>
</div>


    <!-- =========================MODALS========================= -->
    <div id="myModal" class="modal" ng-show="c.isModalVisible">
      <div class="modal-content">
        <p><strong>YOUR REQUESTED CANCELLATIONS</strong></p>
        <ul id="" ng-repeat="record in c.selections" >
          <li>{{record.month}} {{record.day}}, {{record.year}} <b>{{record.type}}</b></li>
        </ul>
        <span class="spanBtns" >
          <button class="cancelBtn" ng-click="c.closeModal()">DO NOT SUBMIT</button>
          <button class="submitBtn" ng-click="c.submitModal()">SUBMIT</button>
        </span>
      </div>
    </div>

 <!-- MODAL -->
    <div id="cancelModalDiv" class="cancelModalDiv" ng-show="c.isCancelModalDiv">
      <div class="cancelModal-content">
        <label id="cancelModalLabel" class="cancelModalLabel" ng-model="c.cancelModalLabel" >{{c.cancelModalLabel}}</label> 
   <br/>
        <label id="cancelModalLabel2" class="cancelModalLabel" ng-model="c.cancelledTickets" >{{c.cancelledTickets}}</label> 
   <br/>
        <button class="validateBtn" ng-click="c.closeValidateModal()">OK</button>
        
      </div>
    </div>

<!-- Modal to prevent user actions while cancellation request is updating -->
<div id="cancelInProgress" class="cancelInProgress" ng-show="c.cancelInProgress" >
  
</div>

















]]></template>
    </sp_widget>
</record_update>
